
#set output directory
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
message(STATUS "PROJECT_SOURCE_DIR ${PROJECT_SOURCE_DIR}")
if (NOT DEFINED CXX_SOURCE_DIR)
    set(CXX_SOURCE_DIR ${PROJECT_SOURCE_DIR})
endif ()
# 打印执行的操作系统
if (CMAKE_SYSTEM_NAME STREQUAL "Linux")
    message(STATUS "Configuring on/for Linux")
elseif (CMAKE_SYSTEM_NAME STREQUAL "Darwin")
    message(STATUS "Configuring on/for macOS")
elseif (CMAKE_SYSTEM_NAME STREQUAL "Windows")
    message(STATUS "Configuring on/for Windows")
elseif (CMAKE_SYSTEM_NAME STREQUAL "AIX")
    message(STATUS "Configuring on/for IBM AIX")
else ()
    message(STATUS "Configuring on/for ${CMAKE_SYSTEM_NAME}")
endif ()

if (CMAKE_HOST_SYSTEM_PROCESSOR MATCHES "i386")
    message(STATUS "i386 architecture detected")
elseif (CMAKE_HOST_SYSTEM_PROCESSOR MATCHES "i686")
    message(STATUS "i686 architecture detected")
elseif (CMAKE_HOST_SYSTEM_PROCESSOR MATCHES "x86_64")
    message(STATUS "x86_64 architecture detected")
elseif (CMAKE_HOST_SYSTEM_PROCESSOR MATCHES "AMD64")
    message(STATUS "x64 architecture detected")
elseif (CMAKE_HOST_SYSTEM_PROCESSOR MATCHES "aarch64") # arm
    message(STATUS "aarch64 architecture detected")
elseif (CMAKE_HOST_SYSTEM_PROCESSOR MATCHES "mips64")
    message(STATUS "mips64 architecture detected")
else ()
    message(STATUS "host processor architecture is unknown")
endif ()

set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake;${CMAKE_MODULE_PATH}")
set(3RD_DIR "${PROJECT_SOURCE_DIR}/3rd")

message(STATUS ${CXX_SOURCE_DIR})
message(STATUS ${CMAKE_MODULE_PATH})
message(STATUS ${3RD_DIR})